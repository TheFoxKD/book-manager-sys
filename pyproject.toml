[project]
name = "book-manager-sys"
version = "0.1.0"
description = "A lightweight command-line library management system"
requires-python = ">=3.12"
authors = [
{ name = "Denis ðŸ¦Š (TheFoxKD)", email = "krishtopadenis@gmail.com" }
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --cov=book_manager_sys --cov-report=term-missing"
python_files = [
"tests.py",
"test_*.py",
]
testpaths = ["tests"]
filterwarnings = [
"ignore::DeprecationWarning",
"ignore::UserWarning",
]

[tool.coverage.run]
include = ["book_manager_sys/**"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
"pragma: no cover",
"def __repr__",
"if self.debug:",
"raise NotImplementedError",
"if __name__ == .__main__.:",
"pass",
"raise ImportError",
]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.ruff]
target-version = "py312"
line-length = 88
extend-exclude = ["docs/*", "*.pyi"]

[tool.ruff.lint]
select = [
"F",     # Pyflakes
"E",     # pycodestyle errors
"W",     # pycodestyle warnings
"I",     # isort
"N",     # pep8-naming
"UP",    # pyupgrade
"B",     # flake8-bugbear
"C4",    # flake8-comprehensions
"DTZ",   # flake8-datetimez
"T10",   # flake8-debugger
"ISC",   # flake8-implicit-str-concat
"G",     # flake8-logging-format
"PIE",   # flake8-pie
"T20",   # flake8-print
"PYI",   # flake8-pyi
"PT",    # flake8-pytest-style
"Q",     # flake8-quotes
"RSE",   # flake8-raise
"RET",   # flake8-return
"SIM",   # flake8-simplify
"ERA",   # eradicate
"PL",    # Pylint
"RUF",   # Ruff-specific rules
]
